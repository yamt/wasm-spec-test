{"source_filename": ".spec-exception-handling/test/core/try_catch.wast",
 "commands": [
  {"type": "module", "line": 3, "filename": "try_catch.0.wasm"}, 
  {"type": "register", "line": 8, "as": "test"}, 
  {"type": "module", "line": 10, "filename": "try_catch.1.wasm"}, 
  {"type": "assert_return", "line": 152, "action": {"type": "invoke", "field": "empty-catch", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 154, "action": {"type": "invoke", "field": "simple-throw-catch", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i32", "value": "23"}]}, 
  {"type": "assert_return", "line": 155, "action": {"type": "invoke", "field": "simple-throw-catch", "args": [{"type": "i32", "value": "1"}]}, "expected": [{"type": "i32", "value": "42"}]}, 
  {"type": "assert_trap", "line": 157, "action": {"type": "invoke", "field": "unreachable-not-caught", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_return", "line": 159, "action": {"type": "invoke", "field": "trap-in-callee", "args": [{"type": "i32", "value": "7"}, {"type": "i32", "value": "2"}]}, "expected": [{"type": "i32", "value": "3"}]}, 
  {"type": "assert_trap", "line": 160, "action": {"type": "invoke", "field": "trap-in-callee", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "0"}]}, "text": "integer divide by zero", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 162, "action": {"type": "invoke", "field": "catch-complex-1", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i32", "value": "3"}]}, 
  {"type": "assert_return", "line": 163, "action": {"type": "invoke", "field": "catch-complex-1", "args": [{"type": "i32", "value": "1"}]}, "expected": [{"type": "i32", "value": "4"}]}, 
  {"type": "assert_exception", "line": 164, "action": {"type": "invoke", "field": "catch-complex-1", "args": [{"type": "i32", "value": "2"}]}, "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 166, "action": {"type": "invoke", "field": "catch-complex-2", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i32", "value": "3"}]}, 
  {"type": "assert_return", "line": 167, "action": {"type": "invoke", "field": "catch-complex-2", "args": [{"type": "i32", "value": "1"}]}, "expected": [{"type": "i32", "value": "4"}]}, 
  {"type": "assert_exception", "line": 168, "action": {"type": "invoke", "field": "catch-complex-2", "args": [{"type": "i32", "value": "2"}]}, "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 170, "action": {"type": "invoke", "field": "throw-catch-param-i32", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_return", "line": 171, "action": {"type": "invoke", "field": "throw-catch-param-i32", "args": [{"type": "i32", "value": "1"}]}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 172, "action": {"type": "invoke", "field": "throw-catch-param-i32", "args": [{"type": "i32", "value": "10"}]}, "expected": [{"type": "i32", "value": "10"}]}, 
  {"type": "assert_return", "line": 174, "action": {"type": "invoke", "field": "throw-catch-param-f32", "args": [{"type": "f32", "value": "1084227584"}]}, "expected": [{"type": "f32", "value": "1084227584"}]}, 
  {"type": "assert_return", "line": 175, "action": {"type": "invoke", "field": "throw-catch-param-f32", "args": [{"type": "f32", "value": "1093140480"}]}, "expected": [{"type": "f32", "value": "1093140480"}]}, 
  {"type": "assert_return", "line": 177, "action": {"type": "invoke", "field": "throw-catch-param-i64", "args": [{"type": "i64", "value": "5"}]}, "expected": [{"type": "i64", "value": "5"}]}, 
  {"type": "assert_return", "line": 178, "action": {"type": "invoke", "field": "throw-catch-param-i64", "args": [{"type": "i64", "value": "0"}]}, "expected": [{"type": "i64", "value": "0"}]}, 
  {"type": "assert_return", "line": 179, "action": {"type": "invoke", "field": "throw-catch-param-i64", "args": [{"type": "i64", "value": "18446744073709551615"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 181, "action": {"type": "invoke", "field": "throw-catch-param-f64", "args": [{"type": "f64", "value": "4617315517961601024"}]}, "expected": [{"type": "f64", "value": "4617315517961601024"}]}, 
  {"type": "assert_return", "line": 182, "action": {"type": "invoke", "field": "throw-catch-param-f64", "args": [{"type": "f64", "value": "4622100592565682176"}]}, "expected": [{"type": "f64", "value": "4622100592565682176"}]}, 
  {"type": "assert_return", "line": 184, "action": {"type": "invoke", "field": "catch-param-i32", "args": [{"type": "i32", "value": "5"}]}, "expected": [{"type": "i32", "value": "5"}]}, 
  {"type": "assert_return", "line": 186, "action": {"type": "invoke", "field": "catch-imported", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 188, "action": {"type": "invoke", "field": "catchless-try", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_return", "line": 189, "action": {"type": "invoke", "field": "catchless-try", "args": [{"type": "i32", "value": "1"}]}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "module", "line": 191, "filename": "try_catch.2.wasm"}, 
  {"type": "assert_return", "line": 211, "action": {"type": "invoke", "field": "imported-mismatch", "args": []}, "expected": [{"type": "i32", "value": "3"}]}, 
  {"type": "assert_malformed", "line": 214, "filename": "try_catch.3.wat", "text": "unexpected token", "module_type": "text"}, 
  {"type": "assert_malformed", "line": 219, "filename": "try_catch.4.wat", "text": "unexpected token", "module_type": "text"}, 
  {"type": "assert_malformed", "line": 224, "filename": "try_catch.5.wat", "text": "unexpected token", "module_type": "text"}, 
  {"type": "assert_invalid", "line": 230, "filename": "try_catch.6.wasm", "text": "type mismatch: instruction requires [i32] but stack has []", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 232, "filename": "try_catch.7.wasm", "text": "type mismatch: instruction requires [i32] but stack has [i64]", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 234, "filename": "try_catch.8.wasm", "text": "type mismatch: block requires [] but stack has [i32]", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 236, "filename": "try_catch.9.wasm", "text": "type mismatch: instruction requires [i32] but stack has [i64]", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 241, "filename": "try_catch.10.wasm", "text": "type mismatch: block requires [] but stack has [i32]", "module_type": "binary"}]}
