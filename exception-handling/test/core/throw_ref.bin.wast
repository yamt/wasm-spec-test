(module binary
  "\00\61\73\6d\01\00\00\00\01\8d\80\80\80\00\03\60"
  "\00\00\60\01\7f\01\7f\60\01\69\00\03\88\80\80\80"
  "\00\07\00\01\00\01\01\01\00\0d\85\80\80\80\00\02"
  "\00\00\00\00\07\9d\81\80\80\00\07\11\63\61\74\63"
  "\68\2d\74\68\72\6f\77\5f\72\65\66\2d\30\00\00\11"
  "\63\61\74\63\68\2d\74\68\72\6f\77\5f\72\65\66\2d"
  "\31\00\01\14\63\61\74\63\68\61\6c\6c\2d\74\68\72"
  "\6f\77\5f\72\65\66\2d\30\00\02\14\63\61\74\63\68"
  "\61\6c\6c\2d\74\68\72\6f\77\5f\72\65\66\2d\31\00"
  "\03\10\74\68\72\6f\77\5f\72\65\66\2d\6e\65\73\74"
  "\65\64\00\04\11\74\68\72\6f\77\5f\72\65\66\2d\72"
  "\65\63\61\74\63\68\00\05\1c\74\68\72\6f\77\5f\72"
  "\65\66\2d\73\74\61\63\6b\2d\70\6f\6c\79\6d\6f\72"
  "\70\68\69\73\6d\00\06\0a\f3\81\80\80\00\07\90\80"
  "\80\80\00\00\02\69\1f\40\01\01\00\00\08\00\0b\00"
  "\0b\0a\0b\9a\80\80\80\00\00\02\69\1f\7f\01\01\00"
  "\00\08\00\0b\0f\0b\20\00\45\04\02\0a\05\1a\0b\41"
  "\17\0b\8e\80\80\80\00\00\02\69\1f\69\01\03\00\08"
  "\00\0b\0b\0a\0b\99\80\80\80\00\00\02\69\1f\7f\01"
  "\03\00\08\00\0b\0f\0b\20\00\45\04\02\0a\05\1a\0b"
  "\41\17\0b\ba\80\80\80\00\01\02\69\02\69\1f\7f\01"
  "\01\01\00\08\01\0b\0f\0b\21\01\02\69\1f\7f\01\01"
  "\00\00\08\00\0b\0f\0b\21\02\20\00\41\00\46\04\40"
  "\20\01\0a\0b\20\00\41\01\46\04\40\20\02\0a\0b\41"
  "\17\0b\ac\80\80\80\00\01\01\69\02\69\1f\7f\01\01"
  "\00\00\08\00\0b\0f\0b\21\01\02\69\1f\7f\01\01\00"
  "\00\20\00\45\04\40\20\01\0a\0b\41\2a\0b\0f\0b\1a"
  "\41\17\0b\98\80\80\80\00\01\01\69\02\69\1f\7c\01"
  "\01\00\00\08\00\0b\00\0b\21\00\41\01\20\00\0a\0b"
)
(assert_exception (invoke "catch-throw_ref-0"))
(assert_exception (invoke "catch-throw_ref-1" (i32.const 0x0)))
(assert_return (invoke "catch-throw_ref-1" (i32.const 0x1)) (i32.const 0x17))
(assert_exception (invoke "catchall-throw_ref-0"))
(assert_exception (invoke "catchall-throw_ref-1" (i32.const 0x0)))
(assert_return (invoke "catchall-throw_ref-1" (i32.const 0x1)) (i32.const 0x17))
(assert_exception (invoke "throw_ref-nested" (i32.const 0x0)))
(assert_exception (invoke "throw_ref-nested" (i32.const 0x1)))
(assert_return (invoke "throw_ref-nested" (i32.const 0x2)) (i32.const 0x17))
(assert_return (invoke "throw_ref-recatch" (i32.const 0x0)) (i32.const 0x17))
(assert_return (invoke "throw_ref-recatch" (i32.const 0x1)) (i32.const 0x2a))
(assert_exception (invoke "throw_ref-stack-polymorphism"))
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
    "\00\00\03\82\80\80\80\00\01\00\0a\89\80\80\80\00"
    "\01\83\80\80\80\00\00\0a\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
    "\00\00\03\82\80\80\80\00\01\00\0a\8c\80\80\80\00"
    "\01\86\80\80\80\00\00\02\40\0a\0b\0b"
  )
  "type mismatch"
)
